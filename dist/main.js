/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements:  */
eval("\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar page = 'client';\nvar priceToPay = 0;\nvar form_method = 'POST';\nvar productToEditID;\nvar cartItems = [];\nvar dataToRemoveFromCart;\nvar timeOut;\n\nwindow.onload = function () {\n  historyPrevNext();\n  getAllProducts();\n\n  if (localStorage.getItem('cart-items')) {\n    cartItems = JSON.parse(localStorage.getItem('cart-items'));\n    cartProducts.innerHTML = '';\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = cartItems[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var cartItem = _step.value;\n        priceToPay += parseInt(cartItem.price, 10);\n        cartProducts.innerHTML += \"\\n        <div class=\\\"card\\\">\\n          <div>\\n            <img class=\\\"prod-img\\\" src=\\\"\".concat(cartItem.img, \"\\\">\\n            <h2>\").concat(cartItem.name, \"</h2>\\n            <p class=\\\"c-desc\\\">\").concat(cartItem.desc, \"</p>\\n          </div>\\n          <div>\\n            <div class=\\\"priceTag\\\">\").concat(cartItem.price, \"$</div>\\n            <button type=\\\"button\\\" class=\\\"remove-from-cart\\\" onclick=\\\"removeItemFromCart(`\").concat(JSON.stringify(cartItem).replace(/\"/g, '-br-br-br'), \"`, this);\\\">Remove</button>\\n          </div>\\n        </div>\\n      \");\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    priceCart.innerText = \"\".concat(priceToPay, \"$\");\n    total.innerText = \"Total: \".concat(priceToPay, \"$\");\n  }\n};\n\nwindow.onpopstate = function () {\n  historyPrevNext();\n};\n\nacBttn.onclick = function () {\n  if (page == 'client') {\n    page = 'admin';\n    update_url('/?page=admin');\n    setAdminPage();\n  } else if (page == 'admin') {\n    page = 'client';\n    update_url('/?page=client');\n    setClientPage();\n  }\n\n  form.classList.remove('show-form');\n  cartPage.classList.remove('show-form');\n};\n\naddItem.onclick = function () {\n  update_url('/?page=admin&&form=shown');\n  form.classList.add('show-form');\n  form_method = 'POST';\n};\n\ncloseFormBttn.onclick = function () {\n  update_url('/?page=admin');\n  form.classList.remove('show-form');\n};\n\ncloseCartBttn.onclick = function () {\n  cartPage.classList.remove('show-form');\n  update_url('/?page=client');\n};\n\ncart.onclick = function () {\n  cartPage.classList.add('show-form');\n  update_url('/?page=client&&cart=shown');\n};\n\nsubmitBttn.onclick =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\nregeneratorRuntime.mark(function _callee() {\n  var form_isValid, available;\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          form_isValid = true;\n\n          if (codeInput.value.length == 0 || nameInput.value.length == 0 || priceInput.value.length == 0 || imgInput.value.length == 0 || descInput.value.length == 0) {\n            form_isValid = false;\n            appMessage(\"ERROR! All the text inputs must be filled out!\", '#ff5019');\n            submitBttn.type = 'submit';\n          } else {\n            submitBttn.type = 'button';\n          }\n\n          if (!(form_method == 'POST')) {\n            _context.next = 5;\n            break;\n          }\n\n          _context.next = 5;\n          return fetch('https://5db82951177b350014ac76e3.mockapi.io/products').then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            clientProducts.innerHTML = '';\n            adminProducts.innerHTML = '';\n            codeInput.setCustomValidity('');\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n              for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var d = _step2.value;\n\n                if (codeInput.value == d.code) {\n                  appMessage(\"ERROR! Code '\".concat(codeInput.value, \"' already exists!\"), '#ff5019');\n                  form_isValid = false;\n                }\n              }\n            } catch (err) {\n              _didIteratorError2 = true;\n              _iteratorError2 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n                  _iterator2[\"return\"]();\n                }\n              } finally {\n                if (_didIteratorError2) {\n                  throw _iteratorError2;\n                }\n              }\n            }\n          });\n\n        case 5:\n          if (checkbox.checked) available = true;else available = false;\n\n          if (form_method == 'POST' && form_isValid) {\n            postProduct({\n              \"code\": codeInput.value,\n              \"name\": nameInput.value,\n              \"price\": priceInput.value,\n              \"available\": available,\n              \"img\": imgInput.value,\n              \"desc\": descInput.value.replace(/\\n/g, '<br>')\n            });\n          } else if (form_method == 'PUT' && form_isValid) {\n            editProduct(productToEditID, {\n              \"code\": codeInput.value,\n              \"name\": nameInput.value,\n              \"price\": priceInput.value,\n              \"available\": available,\n              \"img\": imgInput.value,\n              \"desc\": descInput.value.replace(/\\n/g, '<br>')\n            });\n          }\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\n\nfunction update_url(url) {\n  history.pushState(null, null, url);\n}\n\nfunction getQuery(queryVar) {\n  var query = window.location.search.substring(1);\n  var lets = query.split(\"&\");\n\n  for (var i = 0; i < lets.length; i++) {\n    var pair = lets[i].split(\"=\");\n    if (pair[0] == queryVar) return pair[1];\n  }\n\n  return false;\n}\n\nfunction getAllProducts() {\n  fetch('https://5db82951177b350014ac76e3.mockapi.io/products').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    console.log(data);\n    clientProducts.innerHTML = '';\n    adminProducts.innerHTML = '';\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n      for (var _iterator3 = data[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n        var d = _step3.value;\n\n        if (d.available) {\n          clientProducts.innerHTML += \"\\n          <div class=\\\"card\\\">\\n            <div>\\n              <img class=\\\"prod-img\\\" src=\\\"\".concat(d.img, \"\\\">\\n              <h2>\").concat(d.name, \"</h2>\\n              <p class=\\\"c-desc\\\">\").concat(d.desc, \"</p>\\n            </div>\\n            <div>\\n              <div class=\\\"priceTag\\\">\").concat(d.price, \"$</div>\\n              <button type=\\\"button\\\" class=\\\"add-to-cart\\\" onclick=\\\"addItemToCart(`\").concat(JSON.stringify(d).replace(/\"/g, '-br-br-br'), \"`);\\\">Add to Cart</button>\\n            </div>\\n          </div>\\n        \");\n          adminProducts.innerHTML += \"\\n          <div class=\\\"card admin-card\\\">\\n            <div>\\n              <img class=\\\"prod-img\\\" src=\\\"\".concat(d.img, \"\\\">\\n              <h2>\").concat(d.name, \"</h2>\\n              <p class=\\\"c-desc\\\">\").concat(d.desc, \"</p>\\n            </div>\\n            <div>\\n              <div class=\\\"priceTag\\\">\").concat(d.price, \"$</div>\\n              <div class=\\\"admin-bttns\\\">\\n                <button type=\\\"button\\\" class=\\\"edit-bttn\\\" onclick=\\\"\\n                    update_url('?page=admin&&form=shown');\\n                    productToEditID = \").concat(d.id, \";\\n                    form_method = 'PUT';\\n                    console.log(form_method);\\n                    document.getElementById('form').classList.add('show-form');\\n                    codeInput.value = \").concat(d.code, \";\\n                    nameInput.value = '\").concat(d.name, \"';\\n                    priceInput.value = \").concat(d.price, \";\\n                    checkbox.checked = \").concat(d.available, \";\\n                    imgInput.value = '\").concat(d.img, \"';\\n                    descInput.value = `\").concat(d.desc.replace(/<br>/g, '\\n'), \"`;\\n                  \\\">EDIT</button>\\n                <button type=\\\"button\\\" class=\\\"delete-bttn\\\" onclick=\\\"deleteProduct(\").concat(d.id, \", this);\\\">DELETE</button>\\n              </div>\\n            </div>\\n          </div>\\n        \");\n        } else {\n          adminProducts.innerHTML += \"\\n          <div class=\\\"card admin-card\\\">\\n            <div>\\n              <img class=\\\"prod-img\\\" src=\\\"\".concat(d.img, \"\\\">\\n              <h2>\").concat(d.name, \"</h2>\\n              <p class=\\\"c-desc\\\">\").concat(d.desc, \"</p>\\n            </div>\\n            <div>\\n              <div class=\\\"priceTag\\\">\").concat(d.price, \"$</div>\\n              <div class=\\\"not-available\\\">Not Available</div>\\n              <div class=\\\"admin-bttns\\\">\\n                <button type=\\\"button\\\" class=\\\"edit-bttn\\\" onclick=\\\"\\n                    update_url('?page=admin&&form=shown');\\n                    productToEditID = \").concat(d.id, \";\\n                    form_method = 'PUT';\\n                    console.log(form_method);\\n                    document.getElementById('form').classList.add('show-form');\\n                    codeInput.value = \").concat(d.code, \";\\n                    nameInput.value = '\").concat(d.name, \"';\\n                    priceInput.value = \").concat(d.price, \";\\n                    checkbox.checked = \").concat(d.available, \";\\n                    imgInput.value = '\").concat(d.img, \"';\\n                    descInput.value = `\").concat(d.desc.replace(/<br>/g, '\\n'), \"`;\\n                  \\\">EDIT</button>\\n                <button type=\\\"button\\\" class=\\\"delete-bttn\\\" onclick=\\\"deleteProduct(\").concat(d.id, \", this);\\\">DELETE</button>\\n              </div>\\n            </div>\\n          </div>\\n        \");\n        }\n      }\n    } catch (err) {\n      _didIteratorError3 = true;\n      _iteratorError3 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n          _iterator3[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError3) {\n          throw _iteratorError3;\n        }\n      }\n    }\n\n    if (!getQuery('form')) form.classList.remove('show-form');\n    if (!getQuery('cart')) cartPage.classList.remove('show-form');\n  });\n}\n\nfunction postProduct(json) {\n  fetch('https://5db82951177b350014ac76e3.mockapi.io/products', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(json)\n  }).then(function (response) {\n    if (response.status == 201) {\n      form.classList.remove('show-form');\n      update_url('/?page=admin');\n      getAllProducts();\n      appMessage('Successfully added the product!', '#34a853');\n    } else {\n      appMessage('Could not add the product!', '#ff5019');\n    }\n  });\n}\n\nfunction deleteProduct(id, productToRemoveFromDOM) {\n  fetch(\"https://5db82951177b350014ac76e3.mockapi.io/products/\".concat(id), {\n    method: 'DELETE'\n  }).then(function (response) {\n    if (response.status == 200) {\n      productToRemoveFromDOM.parentElement.parentElement.parentElement.remove();\n      appMessage('Successfully deleted the product!', '#34a853');\n    } else {\n      appMessage('Could not delete the product!', '#ff5019');\n    }\n\n    return response.json();\n  });\n}\n\nfunction editProduct(id, json) {\n  fetch(\"https://5db82951177b350014ac76e3.mockapi.io/products/\".concat(id), {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(json)\n  }).then(function (response) {\n    if (response.status == 200) {\n      update_url('/?page=admin');\n      getAllProducts();\n      appMessage('Successfully edited the product!', '#34a853');\n    } else {\n      appMessage('Could not edit the product!', '#ff5019');\n    }\n\n    return response.json();\n  });\n}\n\nfunction addItemToCart(json) {\n  var product_info = JSON.parse(json.replace(/-br-br-br/g, '\\\"'));\n  priceToPay += parseInt(product_info.price, 10);\n  priceCart.innerText = \"\".concat(priceToPay, \"$\");\n  total.innerText = \"Total: \".concat(priceToPay, \"$\");\n  cartItems.push(product_info);\n  localStorage.setItem('cart-items', JSON.stringify(cartItems));\n  cartProducts.innerHTML = '';\n  var itemsInCart = JSON.parse(localStorage.getItem('cart-items'));\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    for (var _iterator4 = cartItems[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var cartItem = _step4.value;\n      cartProducts.innerHTML += \"\\n      <div class=\\\"card\\\">\\n        <div>\\n          <img class=\\\"prod-img\\\" src=\\\"\".concat(cartItem.img, \"\\\">\\n          <h2>\").concat(cartItem.name, \"</h2>\\n          <p class=\\\"c-desc\\\">\").concat(cartItem.desc, \"</p>\\n        </div>\\n        <div>\\n          <div class=\\\"priceTag\\\">\").concat(cartItem.price, \"$</div>\\n          <button type=\\\"button\\\" class=\\\"remove-from-cart\\\" onclick=\\\"removeItemFromCart(`\").concat(JSON.stringify(cartItem).replace(/\"/g, '-br-br-br'), \"`, this);\\\">Remove</button>\\n        </div>\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n        _iterator4[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n}\n\nfunction removeItemFromCart(json, productToRemoveFromDOM) {\n  var product_info = JSON.parse(json.replace(/-br-br-br/g, '\\\"'));\n  console.log(product_info);\n  cartItems.splice(cartItems.indexOf(product_info), 1);\n  console.log(cartItems);\n  localStorage.setItem('cart-items', JSON.stringify(cartItems));\n  productToRemoveFromDOM.parentElement.parentElement.remove();\n  priceToPay -= parseInt(product_info.price, 10);\n  priceCart.innerText = \"\".concat(priceToPay, \"$\");\n  total.innerText = \"Total: \".concat(priceToPay, \"$\");\n}\n\nfunction setAdminPage() {\n  adminBttn.classList.add('selected');\n  clientBttn.classList.remove('selected');\n  adminPage.classList.remove('hide');\n  clientPage.classList.add('hide');\n}\n\nfunction setClientPage() {\n  clientBttn.classList.add('selected');\n  adminBttn.classList.remove('selected');\n  adminPage.classList.add('hide');\n  clientPage.classList.remove('hide');\n}\n\nfunction historyPrevNext() {\n  if (!getQuery('page') && !getQuery('form')) {\n    page = 'client';\n    form.classList.remove('show-form');\n    cartPage.classList.remove('show-form');\n    setClientPage();\n  } else if (getQuery('page') == 'client' && getQuery('cart') == 'shown') {\n    page = 'client';\n    cartPage.classList.add('show-form');\n    form.classList.remove('show-form');\n    setClientPage();\n  } else if (getQuery('page') == 'client') {\n    page = 'client';\n    form.classList.remove('show-form');\n    cartPage.classList.remove('show-form');\n    setClientPage();\n  } else if (getQuery('page') == 'admin' && getQuery('form') == 'shown') {\n    page = 'admin';\n    setAdminPage();\n    form.classList.add('show-form');\n    cartPage.classList.remove('show-form');\n  } else if (getQuery('page') == 'admin') {\n    page = 'admin';\n    form.classList.remove('show-form');\n    cartPage.classList.remove('show-form');\n    setAdminPage();\n  }\n}\n\nfunction appMessage(app_message_txt, background) {\n  clearTimeout(timeOut);\n  app_message.innerHTML = app_message_txt;\n  app_message.setAttribute('style', \"background:\".concat(background, \";transform:translateX(0);\"));\n  TimeOutf();\n}\n\nfunction TimeOutf() {\n  timeOut = setTimeout(function () {\n    app_message.style['transform'] = 'translateX(-100vw)';\n  }, 5000);\n}\n\n//# sourceURL=webpack:///./src/index.js?");
/******/ })()
;